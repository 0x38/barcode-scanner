{"version":3,"sources":["node_modules/browser-pack/_prelude.js","app/sw.js","node_modules/serviceworker-cache-polyfill/index.js"],"names":[],"mappings":"AAAA;;;ACAA,QAAQ,8BAAR;;AAEA,IAAI,aAAa,cAAb;AACJ,IAAI,gBAAgB,CAAhB;;AAEJ,IAAI,eAAe,CACjB,GADiB,EAEjB,aAFiB,EAGjB,iBAHiB,EAIjB,YAJiB,EAKjB,UALiB,EAMjB,iBANiB,EAOjB,0CAPiB,EAQjB,iCARiB,EASjB,mCATiB,CAAf;;AAYJ,KAAK,SAAL,GAAiB,UAAS,KAAT,EAAgB;AAC/B,QAAM,SAAN,CACE,OAAO,IAAP,CAAY,aAAa,IAAb,GAAoB,aAApB,CAAZ,CAA+C,IAA/C,CAAoD,UAAS,KAAT,EAAgB;AAClE,WAAO,MAAM,MAAN,CAAa,YAAb,EACJ,IADI,CACC,UAAU,QAAV,EAAoB;AACxB,cAAQ,GAAR,CAAY,gCAAZ,EADwB;AAExB,aAAO,QAAP,CAFwB;KAApB,CADR,CADkE;GAAhB,CADtD,EAD+B;CAAhB;;AAYjB,KAAK,UAAL,GAAkB,UAAS,KAAT,EAAgB;AAChC,MAAI,mBAAmB,aAAa,IAAb,GAAoB,aAApB,CADS;AAEhC,SAAO,IAAP,GAAc,IAAd,CAAmB,UAAS,UAAT,EAAqB;AACtC,WAAO,QAAQ,GAAR,CACL,WAAW,GAAX,CAAe,UAAS,SAAT,EAAoB;AACjC,UAAI,UAAU,OAAV,CAAkB,UAAlB,KAAiC,CAAC,CAAD,EAAI;AACvC,eADuC;OAAzC;;AAIA,UAAI,aAAa,gBAAb,EAA+B;AACjC,eAAO,OAAO,MAAP,CAAc,SAAd,CAAP,CADiC;OAAnC;KALa,CADV,CAAP,CADsC;GAArB,CAAnB,CAFgC;CAAhB;;AAiBlB,KAAK,OAAL,GAAe,UAAS,KAAT,EAAgB;AAC7B,MAAI,UAAU,MAAM,OAAN,CADe;AAE7B,QAAM,WAAN,CACE,OAAO,KAAP,CAAa,OAAb,EAAsB,IAAtB,CAA2B,UAAS,QAAT,EAAmB;AAC5C,QAAI,QAAJ,EAAc;AACZ,aAAO,QAAP,CADY;KAAd;;AAIA,WAAO,MAAM,OAAN,EAAe,IAAf,CAAoB,UAAS,QAAT,EAAmB;AAC5C,UAAI,kBAAkB,SAAS,KAAT,EAAlB,CADwC;AAE5C,aAAO,IAAP,CAAY,aAAa,IAAb,GAAoB,aAApB,CAAZ,CAA+C,IAA/C,CACE,UAAS,KAAT,EAAgB;AACd,cAAM,GAAN,CAAU,OAAV,EAAmB,eAAnB,EAAoC,KAApC,CAA0C,UAAS,GAAT,EAAc;AACtD,kBAAQ,IAAR,CAAa,QAAQ,GAAR,GAAc,IAAd,GAAqB,IAAI,OAAJ,CAAlC,CADsD;SAAd,CAA1C,CADc;OAAhB,CADF,CAF4C;AAQ5C,aAAO,QAAP,CAR4C;KAAnB,CAA3B,CAL4C;GAAnB,CAD7B,EAF6B;CAAhB;;;AC9Cf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"sw.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","require('serviceworker-cache-polyfill');\n\nvar CACHE_NAME = 'static-cache';\nvar CACHE_VERSION = 1;\n\nvar filesToCache = [\n  '/',\n  '/index.html',\n  '/css/styles.css',\n  '/js/app.js',\n  '/main.js',\n  '/decoder.min.js',\n  '/images/touch/android-chrome-192x192.png',\n  '/images/touch/favicon-96x96.png',\n  '/images/touch/favicon-194x194.png'\n];\n\nself.oninstall = function(event) {\n  event.waitUntil(\n    caches.open(CACHE_NAME + '-v' + CACHE_VERSION).then(function(cache) {\n      return cache.addAll(filesToCache)\n        .then(function (response) {\n          console.log('Files are cached successfully.');\n          return response;\n        })\n    })\n  );\n};\n\nself.onactivate = function(event) {\n  var currentCacheName = CACHE_NAME + '-v' + CACHE_VERSION;\n  caches.keys().then(function(cacheNames) {\n    return Promise.all(\n      cacheNames.map(function(cacheName) {\n        if (cacheName.indexOf(CACHE_NAME) == -1) {\n          return;\n        }\n\n        if (cacheName != currentCacheName) {\n          return caches.delete(cacheName);\n        }\n      })\n    );\n  });\n};\n\nself.onfetch = function(event) {\n  var request = event.request;\n  event.respondWith(\n    caches.match(request).then(function(response) {\n      if (response) {\n        return response;\n      }\n\n      return fetch(request).then(function(response) {\n        var responseToCache = response.clone();\n        caches.open(CACHE_NAME + '-v' + CACHE_VERSION).then(\n          function(cache) {\n            cache.put(request, responseToCache).catch(function(err) {\n              console.warn(request.url + ': ' + err.message);\n            });\n          });\n        return response;\n      });\n    })\n  );\n};\n","if (!Cache.prototype.add) {\n  Cache.prototype.add = function add(request) {\n    return this.addAll([request]);\n  };\n}\n\nif (!Cache.prototype.addAll) {\n  Cache.prototype.addAll = function addAll(requests) {\n    var cache = this;\n\n    // Since DOMExceptions are not constructable:\n    function NetworkError(message) {\n      this.name = 'NetworkError';\n      this.code = 19;\n      this.message = message;\n    }\n    NetworkError.prototype = Object.create(Error.prototype);\n\n    return Promise.resolve().then(function() {\n      if (arguments.length < 1) throw new TypeError();\n      \n      // Simulate sequence<(Request or USVString)> binding:\n      var sequence = [];\n\n      requests = requests.map(function(request) {\n        if (request instanceof Request) {\n          return request;\n        }\n        else {\n          return String(request); // may throw TypeError\n        }\n      });\n\n      return Promise.all(\n        requests.map(function(request) {\n          if (typeof request === 'string') {\n            request = new Request(request);\n          }\n\n          var scheme = new URL(request.url).protocol;\n\n          if (scheme !== 'http:' && scheme !== 'https:') {\n            throw new NetworkError(\"Invalid scheme\");\n          }\n\n          return fetch(request.clone());\n        })\n      );\n    }).then(function(responses) {\n      // TODO: check that requests don't overwrite one another\n      // (don't think this is possible to polyfill due to opaque responses)\n      return Promise.all(\n        responses.map(function(response, i) {\n          return cache.put(requests[i], response);\n        })\n      );\n    }).then(function() {\n      return undefined;\n    });\n  };\n}\n"]}